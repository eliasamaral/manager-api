type Report {
  id: String!
  project: String!
  leader: String!
  report_date: String!
  morning_weather_condition: String!
  afternoon_weather_condition: String!
  observations: String
  activities: [Activity!]
  collaborators: [Collaborator!]
}

type Activity {
  id: String
  duration: String!
  description: String
}

type Collaborator {
  name: String!
  startTime: String!
  endTime: String!
  description: String
}

input ReportInput {
  id: String!
  project: String!
  leader: String!
  report_date: String!
  morning_weather_condition: String!
  afternoon_weather_condition: String!
  observations: String
  activities: [ActivityInput]
  collaborators: [CollaboratorInput]
}

input ActivityInput {
  id: String
  duration: String
  description: String
}

input CollaboratorInput {
  name: String
  start_time: String
  end_time: String
  description: String
}



type Query {
  getReports: [RDO!]!
  getReport(id: ID!): RDO!
}


type Mutation {
  createReport(data: ReportInput!): Report!
}