
type RDO {
  _id: ID
  projeto: String
  local: String
  encarregado: String
  observacoes: String
  clima: Clima
  dataDaProducao: String
  atividades: [Atividade]
  maoDeObra: [MaoDeObra]
}

type Clima {
  manha: String
  tarde: String
}

type Atividade {
  atividade: String
  duracao: String
}

type MaoDeObra {
  nome: String
  funcao: String
  inicio: String
  fim: String
}


input RDOInput {
  dataAtual: String
  projeto: String
  local: String
  encarregado: String
  observacoes: String
  clima: ClimaInput
  dataDaProducao: String
  atividades: [AtividadeInput]
  maoDeObra: [MaoDeObraInput]
}


input AtividadeInput {
  atividade: String
  duracao: String
}

input ClimaInput {
  manha: String
  tarde: String
}

input maoDeObraInput {
  encarregado: Int
  motorista: Int
  eletricista: Int
  auxiliar: Int
}

input MaoDeObraInput {
  nome: String
  funcao: String
  inicio: String
  fim: String
}


type Query {
  getRDOS: [RDO!]!
  getRDO(_id: ID!): RDO!
}

type Mutation {
  createRDO(data: RDOInput): RDO
}
