type RDO {
  _id: ID
  projeto: String
  local: String
  encarregado: String
  observacoes: String
  clima: Clima
  dataDaProducao: String
  atividades: [Atividade] 
  maoDeObra: [MaoDeObra]
  createdAt: String
  files: [File]
}

type File {
  id: ID
  reportID: String
  name: String
  url: String
  description: String
}

type Clima {
  manha: String
  tarde: String
}

type Atividade {
  id: ID
  duration: String
  description: String
}

type MaoDeObra {
  nome: String
  funcao: String
  inicio: String
  fim: String
}

input RDOInput {
  projeto: String
  local: String
  encarregado: String
  observacoes: String
  clima: ClimaInput
  dataDaProducao: String
  atividades: [AtividadeInput]
  maoDeObra: [MaoDeObraInput]
  createdAt: String
  files: [FileInput]
}

input FileInput {
  id: ID
  name: String
  reportID: String
  url: String
    description: String

}

input AtividadeInput {
  duration: String
  description: String

}

input ClimaInput {
  manha: String
  tarde: String
}

input MaoDeObraInput {
  nome: String
  funcao: String
  inicio: String
  fim: String
}



type Query {
  getRDOS: [RDO!]!
  getRDO(_id: ID!): RDO!
}

type Mutation {
  createRDO(data: RDOInput): RDO
}
