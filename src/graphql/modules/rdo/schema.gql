type RDO {
  _id: ID
  projeto: String
  local: String
  encarregado: String
  observacoes: String
  clima: Clima
  dataDaProducao: String
  atividades: [Atividade]
  maoDeObra: [MaoDeObra]
  ferramentaDevolvida: [Ferramentas]
  createdAt: String
}

type Clima {
  manha: String
  tarde: String
}

type Atividade {
  atividade: String
  duracao: String
  executante: String
  valor: Float
}

type MaoDeObra {
  nome: String
  funcao: String
  inicio: String
  fim: String
}

type Ferramentas {
  nome: String
  quantidade: Float
  solicitante: String
  ferramentaDevolvida: Boolean
}

input RDOInput {
  projeto: String
  local: String
  encarregado: String
  observacoes: String
  clima: ClimaInput
  dataDaProducao: String
  atividades: [AtividadeInput]
  maoDeObra: [MaoDeObraInput]
  ferramentaDevolvida: [FerramentasInput]
  createdAt: String
}

input AtividadeInput {
  atividade: String
  duracao: String
  executante: String
    valor: Float

}

input ClimaInput {
  manha: String
  tarde: String
}

input MaoDeObraInput {
  nome: String
  funcao: String
  inicio: String
  fim: String
}

input FerramentasInput {
  nome: String
  quantidade: Float
  solicitante: String
  ferramentaDevolvida: Boolean
}

type Query {
  getRDOS: [RDO!]!
  getRDO(_id: ID!): RDO!
}

type Mutation {
  createRDO(data: RDOInput): RDO
}
