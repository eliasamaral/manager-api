type RDO {
  _id: ID!
  projeto: Float
  diagrama: Float
  local: String
  encarregado: String
  dataDaProducao: String
  maoDeObra: maoDeObra
  clima: Clima
  observacoes: String
  createdAt: String
  servicos: [SRV]
  isFinal: Boolean
}

type maoDeObra {
  encarregado: Int
  motorista: Int
  eletricista: Int
  auxiliar: Int
}

type SRV {
  _id: ID!
  codigo: Float
  descricao: String
  quantidade: Float
}
type Clima {
  manha: String
  tarde: String
}

input RDOInput {
  projeto: Float
  diagrama: Float
  local: String
  encarregado: String
  maoDeObra: maoDeObraInput
  clima: ClimaInput
  observacoes: String
  dataDaProducao: String
  createdAt: String
  servicos: [SRVInput]
  isFinal: Boolean
}

input SRVInput {
  codigo: Float
  descricao: String
  quantidade: Float
}

input ClimaInput {
  manha: String
  tarde: String
}
input maoDeObraInput {
  encarregado: Int
  motorista: Int
  eletricista: Int
  auxiliar: Int
}

type Query {
  getRDOS: [RDO!]!
  getRDO(_id: ID!): RDO!
}

type Mutation {
  createRDO(data: RDOInput): RDO
}
